trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - '/'

pr:
  branches:
    include:
      - master
  paths:
    include:
      - '/'

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - master
    always: true

variables:
  - template: '/miscellaneous/build_templates/variables.yml'
  - name: projPath
    value: ''
  - name: CredFile
    value: appsettings.json
  - name: CredFileLibrary
    value: product-readiness.pi_afgsg_apsettings.json
  - name: analysisProject
    value: PI_AFGSG_DotNet
  - name: run_import
    value: false
  - name: run_delete
    value: false

jobs:
  - job: Tests
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    steps:
      - template: '/miscellaneous/build_templates/config.yml'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibrary)
          filePath: $(projPath)

      - script: |
          for /D %%a in (".\*.*") do xcopy /y /d appsettings.json "%%a\"
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        displayName: 'copy file to subfolders'

      - script: |
          "%pihome64%\af\afimport" "\\OCSSAMPLESAPI01\Green Power Company" /F:"AF Database - Green Power Company.xml" /P
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        condition: eq(variables.run_import, true)
        displayName: 'import database2'

      - script: |
          nuget restore
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        displayName: 'nuget restore'

      - task: DotNetCoreCLI@2
        displayName: 'Run tests'
        inputs:
          command: test
          arguments: --filter Category=Solution
          publishTestResults: true
          testRunTitle: '$(Agent.JobName) on $(imageName)'
          workingDirectory: $(Build.SourcesDirectory)$(projPath)/

      - task: DotNetCoreCLI@2
        displayName: 'Run Delete'
        condition: eq(variables.run_delete, true)
        inputs:
          command: test
          arguments: --filter Category=Delete
          publishTestResults: true
          testRunTitle: '$(Agent.JobName) on $(imageName)'
          workingDirectory: $(Build.SourcesDirectory)$(projPath)/

  - template: '/miscellaneous/build_templates/analysis.yml'
    parameters:
      language: dotnet
      copyFile: true
